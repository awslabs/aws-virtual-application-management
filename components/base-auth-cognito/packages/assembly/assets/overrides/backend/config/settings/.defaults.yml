# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# 
# Licensed under the Apache License, Version 2.0 (the "License").
# You may not use this file except in compliance with the License.
# A copy of the License is located at
# 
# http://aws.amazon.com/apache2.0
# 
# or in the "license" file accompanying this file. This file is distributed
# on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
# express or implied. See the License for the specific language governing
# permissions and limitations under the License.

# ========================== Settings added by base-auth-cognito-assembly =============================
# Include vpce in the site domain name or not
# By default this name is generated by aws and serverless framework as
# <gw-id>.execute-api.us-east-1.amazonaws.com/${stage}
# Turn this flag to generate
# <gw-id>-<vpce-id>.execute-api.us-east-1.amazonaws.com/${stage}
# Useful when trying to access the site from a paired VPC
# This setting is only applicable if the "base-ui-private-hosting" is being used.
# This setting is defined by "base-ui-private-hosting" component as well but we still need to define here as well in
# case "base-ui-private-hosting" component is not used because the setting is referenced in the CFN template fragment
# contributed by this component (i.e., "base-auth-cognito/packages/assembly/assets/overrides/backend/config/infra/cloudformation.yml")
useVpceInUrl: false
#useVpceInUrl: true

# Indicates the name of the Cognito user pool created for authentication
cognitoUserPoolName: ${self:custom.settings.namespace}

# Partial cognito domain prefix where the user pool's UI and OAuth endpoints are hosted
# This is later appended with the last section of the StackID for additional uniqueness
# NOTE: Must be regionally unique
userPoolDomainPartialPrefix: ${self:custom.settings.namespace}

# Name of the primary user pool app client used by the web app
webappAppClientName: webapp

# The UI website URL, attempt to read this from web-infra stack CloudFormation output, if the solution is using public hosting.
# If the solution is using private hosting, the UI would be served by API Gateway (defined in the backend stack) and the website URL will be
# unavailable from web-infra stack in that case. Set it to empty string in that case.
websiteUrl: ${cf:${self:custom.settings.webInfraStackName}.WebsiteUrl, ''}

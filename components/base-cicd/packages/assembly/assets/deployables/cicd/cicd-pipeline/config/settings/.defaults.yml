# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# 
# Licensed under the Apache License, Version 2.0 (the "License").
# You may not use this file except in compliance with the License.
# A copy of the License is located at
# 
# http://aws.amazon.com/apache2.0
# 
# or in the "license" file accompanying this file. This file is distributed
# on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
# express or implied. See the License for the specific language governing
# permissions and limitations under the License.

sourceCicdAppArtifactBucketName: ${self:custom.settings.globalNamespace}-cicd-pipeline-appartifacts

# Flag indicating whether to create a staging environment.
# If this flag is set to true the pipeline will first deploy the solution to a staging environment before deploying the
# solution to the target environment. By default, the staging environment is named by suffixing "stg" to the
# target environment name.
# For example, if the name of the target environment is "prod" the staging env will be named "prodstg".
# You can change the name of the staging environment by specifying "stgEnvName" setting
# If this flag is set to true then you MUST also provide settings file for the staging env.
# For example, if createStagingEnv=true and if the stgEnvName=t"prodstg" then make sure you have
# "prodstg.yml" file in top level "config/settings" directory
createStagingEnv: false

# Flag indicating whether to require manual approval before deploying to target environment
requireManualApproval: false

# Flag indicating whether to run integration tests against the target environment
# Set this to false if you do not want to run automated tests against target env (such as production)
# This flag is only to control tests against target env. The tests are always run against staging env
# when "createStagingEnv" is "true" irrespective of this flag.
runTestsAgainstTargetEnv: true

# Name of the staging environment to run the integration tests against.
# This setting is ignored when createStagingEnv is not true.
stgEnvName: ${self:custom.settings.envName}stg

# Path to repo token (e.g. Github access token) in parameter store
tokenName: /${self:custom.settings.paramStoreRoot}/github/token

# Either specify a Github owner (and an OAuth Token in CloudFormation) or source account and role (for CodeCommit)
githubOwner: ''

# Either use vpc configuration to execute AWS CodeBuild projects
# Possible values - true or false
useVpc: false

# Vpc configuration for AWS CodeBuild project
codeBuildVpcConfig:
  vpcId: ''
  subnets: []
  securityGroupIds: []

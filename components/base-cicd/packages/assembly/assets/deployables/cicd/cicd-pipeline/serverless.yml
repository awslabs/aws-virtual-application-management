# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# 
# Licensed under the Apache License, Version 2.0 (the "License").
# You may not use this file except in compliance with the License.
# A copy of the License is located at
# 
# http://aws.amazon.com/apache2.0
# 
# or in the "license" file accompanying this file. This file is distributed
# on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
# express or implied. See the License for the specific language governing
# permissions and limitations under the License.

# For full config options, see docs.serverless.com
# Note that most settings in here come from config/settings/*.yaml
service: ${self:custom.settings.awsRegionShortName}-${self:custom.settings.solutionName}-cicd-pipeline

provider:
  name: aws
  region: ${self:custom.settings.awsRegion}
  profile: ${self:custom.settings.awsProfile}
  stackName: ${self:custom.settings.envName}-${self:service}
  deploymentBucket:
    name: ${self:custom.settings.deploymentBucketName}
    serverSideEncryption: AES256
  stackTags: ${self:custom.tags}
  # All references beginning with ${self:*, ${opt:*, ${file:*, ${deep:*, and ${cf:* will be resolved by Serverless
  # All other ${* references will be resolved by CloudFormation
  # See https://forum.serverless.com/t/getting-handle-accountid-in-serverless-config/946/11 and
  # See https://github.com/serverless/serverless/issues/5011
  variableSyntax: '\$\{((((self|opt|deep|cf):)|file)((?!\$\{).)+?)}'

custom:
  settings: ${file(./config/settings/.settings.js):merged}
  tags:
    Name: ${self:custom.settings.envName}-${self:service}
  scripts:
    commands:
      cloud-build: |
        export AWS_PAGER=''

        export commandProfile='--profile ${self:custom.settings.awsProfile} --region ${self:custom.settings.awsRegion}'

        appPipelineName=$(aws cloudformation describe-stacks --stack-name ${self:provider.stackName} --query "Stacks[0].Outputs[?@.OutputKey=='AppPipelineName'].OutputValue" --output text $commandProfile)

        printf "\nStarting the build pipeline ...\n"
        pipelineExecutionId="$(aws codepipeline start-pipeline-execution --name $appPipelineName $commandProfile --output text --query 'pipelineExecutionId')"

        # sleep for 5 seconds to allow the pipeline to start
        printf "Waiting for the build pipeline to start ...\n"
        sleep 5

        pipelineExecutionStatus="$(aws codepipeline get-pipeline-execution --pipeline-name $appPipelineName --pipeline-execution-id $pipelineExecutionId $commandProfile --output text --query 'pipelineExecution.status')"

        printf "Building ..."

        while [ "$pipelineExecutionStatus" = "InProgress" ]
        do
          printf "."
          sleep 1
          pipelineExecutionStatus="$(aws codepipeline get-pipeline-execution --pipeline-name $appPipelineName --pipeline-execution-id $pipelineExecutionId $commandProfile --output text --query 'pipelineExecution.status')"
        done

        printf "\n\nBuild pipeline complete with status: %s\n\n" "$pipelineExecutionStatus"

resources:
  - Description: ${self:custom.settings.solutionName} ${self:custom.settings.envName} ${self:custom.settings.version} CICD-Pipeline
  - ${file(./config/infra/cloudformation.yml)}

plugins:
  - serverless-deployment-bucket
  - serverless-plugin-scripts
  - '@aws-ee/base-cfn-lint-helper'
